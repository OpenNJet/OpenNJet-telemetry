
# Copyright (C) Ruslan Ermilov
# Copyright (C) Nginx, Inc.
# Copyright (C) TMLake, Inc.


case $njt_module_type in
    HTTP_*) njt_var=HTTP ;;
    *)      njt_var=$njt_module_type ;;
esac


if [ "$njt_module_link" = DYNAMIC ]; then

    for njt_module in $njt_module_name; do
        # extract the first name
        break
    done

    DYNAMIC_MODULES="$DYNAMIC_MODULES $njt_module"

    eval ${njt_module}_MODULES=\"$njt_module_name\"

    if [ -z "$njt_module_order" -a \
         \( "$njt_module_type" = "HTTP_FILTER" \
         -o "$njt_module_type" = "HTTP_AUX_FILTER" \) ]
    then
        eval ${njt_module}_ORDER=\"$njt_module_name \
                                   njt_http_copy_filter_module\"
    else
        eval ${njt_module}_ORDER=\"$njt_module_order\"
    fi

    srcs=
    shrd=
    for src in $njt_module_srcs
    do
        found=no
        for old in $DYNAMIC_MODULES_SRCS
        do
            if [ $src = $old ]; then
                found=yes
                break
            fi
        done

        if [ $found = no ]; then
            srcs="$srcs $src"
        else
            shrd="$shrd $src"
        fi
    done
    eval ${njt_module}_SRCS=\"$srcs\"
    eval ${njt_module}_SHRD=\"$shrd\"

    DYNAMIC_MODULES_SRCS="$DYNAMIC_MODULES_SRCS $srcs"

    if test -n "$njt_module_incs"; then
        CORE_INCS="$CORE_INCS $njt_module_incs"
    fi

    if test -n "$njt_module_deps"; then
        NJT_ADDON_DEPS="$NJT_ADDON_DEPS $njt_module_deps"
    fi

    libs=
    for lib in $njt_module_libs
    do
        case $lib in

            LIBXSLT | LIBGD | GEOIP | PERL)
                libs="$libs \$NJT_LIB_$lib"

                if eval [ "\$USE_${lib}" = NO ] ; then
                    eval USE_${lib}=DYNAMIC
                fi
            ;;

            PCRE | OPENSSL | ZLIB)
                eval USE_${lib}=YES
            ;;

            MD5 | SHA1)
                # obsolete
            ;;

            *)
                libs="$libs $lib"
            ;;

        esac
    done
    eval ${njt_module}_LIBS=\'$libs\'

elif [ "$njt_module_link" = YES ]; then

    eval ${njt_module_type}_MODULES=\"\$${njt_module_type}_MODULES \
                                      $njt_module_name\"

    eval ${njt_var}_SRCS=\"\$${njt_var}_SRCS $njt_module_srcs\"

    if test -n "$njt_module_incs"; then
        eval ${njt_var}_INCS=\"\$${njt_var}_INCS $njt_module_incs\"
    fi

    if test -n "$njt_module_deps"; then
        eval ${njt_var}_DEPS=\"\$${njt_var}_DEPS $njt_module_deps\"
    fi

    for lib in $njt_module_libs
    do
        case $lib in

            PCRE | OPENSSL | ZLIB | LIBXSLT | LIBGD | PERL | GEOIP)
                eval USE_${lib}=YES
            ;;

            MD5 | SHA1)
                # obsolete
            ;;

            *)
                CORE_LIBS="$CORE_LIBS $lib"
            ;;

        esac
    done

elif [ "$njt_module_link" = ADDON ]; then

    eval ${njt_module_type}_MODULES=\"\$${njt_module_type}_MODULES \
                                      $njt_module_name\"

    srcs=
    for src in $njt_module_srcs
    do
        found=no
        for old in $NJT_ADDON_SRCS
        do
            if [ $src = $old ]; then
                found=yes
                break
            fi
        done

        if [ $found = no ]; then
            srcs="$srcs $src"
        fi
    done

    NJT_ADDON_SRCS="$NJT_ADDON_SRCS $srcs"

    if test -n "$njt_module_incs"; then
        eval ${njt_var}_INCS=\"\$${njt_var}_INCS $njt_module_incs\"
    fi

    if test -n "$njt_module_deps"; then
        NJT_ADDON_DEPS="$NJT_ADDON_DEPS $njt_module_deps"
    fi

    for lib in $njt_module_libs
    do
        case $lib in

            PCRE | OPENSSL | ZLIB | LIBXSLT | LIBGD | PERL | GEOIP)
                eval USE_${lib}=YES
            ;;

            MD5 | SHA1)
                # obsolete
            ;;

            *)
                CORE_LIBS="$CORE_LIBS $lib"
            ;;

        esac
    done
fi
