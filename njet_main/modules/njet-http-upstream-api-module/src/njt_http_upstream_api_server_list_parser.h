

/* This file was generated by JSON Schema to C.
 * Any changes made to it will be lost on regeneration. 

 * Copyright (C) 2021-2023  TMLake(Beijing) Technology Co., Ltd.
 */

#ifndef NJT_HTTP_UPSTREAM_API_SERVER_LIST_PARSER_H
#define NJT_HTTP_UPSTREAM_API_SERVER_LIST_PARSER_H
#include <stdint.h>
#include <stdbool.h>
#include "njt_core.h"
#include "js2c_njet_builtins.h"
/* ===================== Generated type declarations ===================== */
typedef struct server_list_serverDef_t_s server_list_serverDef_t; //forward decl for public definition
typedef int64_t server_list_serverDef_id_t;
typedef njt_str_t server_list_serverDef_server_t;

typedef njt_str_t server_list_serverDef_name_t;

typedef int64_t server_list_serverDef_weight_t;
typedef int64_t server_list_serverDef_max_conns_t;
typedef int64_t server_list_serverDef_max_fails_t;
typedef njt_str_t server_list_serverDef_fail_timeout_t;

typedef njt_str_t server_list_serverDef_slow_start_t;

typedef njt_str_t server_list_serverDef_route_t;

typedef bool server_list_serverDef_backup_t;
typedef bool server_list_serverDef_down_t;
typedef int64_t server_list_serverDef_parent_t;
typedef njt_str_t server_list_serverDef_host_t;

typedef bool server_list_serverDef_drain_t;
typedef struct server_list_serverDef_t_s {
    server_list_serverDef_id_t id;
    server_list_serverDef_server_t server;
    server_list_serverDef_name_t name;
    server_list_serverDef_weight_t weight;
    server_list_serverDef_max_conns_t max_conns;
    server_list_serverDef_max_fails_t max_fails;
    server_list_serverDef_fail_timeout_t fail_timeout;
    server_list_serverDef_slow_start_t slow_start;
    server_list_serverDef_route_t route;
    server_list_serverDef_backup_t backup;
    server_list_serverDef_down_t down;
    server_list_serverDef_parent_t parent;
    server_list_serverDef_host_t host;
    server_list_serverDef_drain_t drain;
    unsigned int is_id_set:1;
    unsigned int is_server_set:1;
    unsigned int is_name_set:1;
    unsigned int is_weight_set:1;
    unsigned int is_max_conns_set:1;
    unsigned int is_max_fails_set:1;
    unsigned int is_fail_timeout_set:1;
    unsigned int is_slow_start_set:1;
    unsigned int is_route_set:1;
    unsigned int is_backup_set:1;
    unsigned int is_down_set:1;
    unsigned int is_parent_set:1;
    unsigned int is_host_set:1;
    unsigned int is_drain_set:1;
} server_list_serverDef_t;

server_list_serverDef_id_t get_server_list_serverDef_id(server_list_serverDef_t *out);
server_list_serverDef_server_t* get_server_list_serverDef_server(server_list_serverDef_t *out);
server_list_serverDef_name_t* get_server_list_serverDef_name(server_list_serverDef_t *out);
server_list_serverDef_weight_t get_server_list_serverDef_weight(server_list_serverDef_t *out);
server_list_serverDef_max_conns_t get_server_list_serverDef_max_conns(server_list_serverDef_t *out);
server_list_serverDef_max_fails_t get_server_list_serverDef_max_fails(server_list_serverDef_t *out);
server_list_serverDef_fail_timeout_t* get_server_list_serverDef_fail_timeout(server_list_serverDef_t *out);
server_list_serverDef_slow_start_t* get_server_list_serverDef_slow_start(server_list_serverDef_t *out);
server_list_serverDef_route_t* get_server_list_serverDef_route(server_list_serverDef_t *out);
server_list_serverDef_backup_t get_server_list_serverDef_backup(server_list_serverDef_t *out);
server_list_serverDef_down_t get_server_list_serverDef_down(server_list_serverDef_t *out);
server_list_serverDef_parent_t get_server_list_serverDef_parent(server_list_serverDef_t *out);
server_list_serverDef_host_t* get_server_list_serverDef_host(server_list_serverDef_t *out);
server_list_serverDef_drain_t get_server_list_serverDef_drain(server_list_serverDef_t *out);
void set_server_list_serverDef_id(server_list_serverDef_t* obj, server_list_serverDef_id_t field);
void set_server_list_serverDef_server(server_list_serverDef_t* obj, server_list_serverDef_server_t* field);
void set_server_list_serverDef_name(server_list_serverDef_t* obj, server_list_serverDef_name_t* field);
void set_server_list_serverDef_weight(server_list_serverDef_t* obj, server_list_serverDef_weight_t field);
void set_server_list_serverDef_max_conns(server_list_serverDef_t* obj, server_list_serverDef_max_conns_t field);
void set_server_list_serverDef_max_fails(server_list_serverDef_t* obj, server_list_serverDef_max_fails_t field);
void set_server_list_serverDef_fail_timeout(server_list_serverDef_t* obj, server_list_serverDef_fail_timeout_t* field);
void set_server_list_serverDef_slow_start(server_list_serverDef_t* obj, server_list_serverDef_slow_start_t* field);
void set_server_list_serverDef_route(server_list_serverDef_t* obj, server_list_serverDef_route_t* field);
void set_server_list_serverDef_backup(server_list_serverDef_t* obj, server_list_serverDef_backup_t field);
void set_server_list_serverDef_down(server_list_serverDef_t* obj, server_list_serverDef_down_t field);
void set_server_list_serverDef_parent(server_list_serverDef_t* obj, server_list_serverDef_parent_t field);
void set_server_list_serverDef_host(server_list_serverDef_t* obj, server_list_serverDef_host_t* field);
void set_server_list_serverDef_drain(server_list_serverDef_t* obj, server_list_serverDef_drain_t field);
server_list_serverDef_t* create_server_list_serverDef(njt_pool_t *pool);
typedef server_list_serverDef_t server_list_item_t; //ref def
typedef njt_array_t  server_list_t;
server_list_item_t* get_server_list_item(server_list_t *out, size_t idx);
int add_item_server_list(server_list_t *src, server_list_item_t* items);
server_list_t* create_server_list(njt_pool_t *pool, size_t nelts);
server_list_t* json_parse_server_list(njt_pool_t *pool, const njt_str_t *json_string, js2c_parse_error_t *err_ret);
njt_str_t* to_json_server_list(njt_pool_t *pool, server_list_t *out, njt_int_t flags);
#endif /* NJT_HTTP_UPSTREAM_API_SERVER_LIST_PARSER_H */
