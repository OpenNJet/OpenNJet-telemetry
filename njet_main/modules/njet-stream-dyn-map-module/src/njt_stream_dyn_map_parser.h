

/* This file was generated by JSON Schema to C.
 * Any changes made to it will be lost on regeneration. 

 * Copyright (C) 2021-2023  TMLake(Beijing) Technology Co., Ltd.
 */

#ifndef PARSER_STREAMMAP_H
#define PARSER_STREAMMAP_H
#include <stdint.h>
#include <stdbool.h>
#include "njt_core.h"
#include "js2c_njet_builtins.h"
/* ===================== Generated type declarations ===================== */
typedef njt_str_t streammap_maps_item_keyFrom_t;

typedef njt_str_t streammap_maps_item_keyTo_t;

typedef njt_str_t streammap_maps_item_values_item_valueFrom_t;

typedef njt_str_t streammap_maps_item_values_item_valueTo_t;

typedef struct streammap_maps_item_values_item_t_s {
    streammap_maps_item_values_item_valueFrom_t valueFrom;
    streammap_maps_item_values_item_valueTo_t valueTo;
    unsigned int is_valueFrom_set:1;
    unsigned int is_valueTo_set:1;
} streammap_maps_item_values_item_t;

typedef njt_array_t  streammap_maps_item_values_t;
typedef bool streammap_maps_item_isVolatile_t;
typedef bool streammap_maps_item_hostnames_t;
typedef struct streammap_maps_item_t_s {
    streammap_maps_item_keyFrom_t keyFrom;
    streammap_maps_item_keyTo_t keyTo;
    streammap_maps_item_values_t *values;
    streammap_maps_item_isVolatile_t isVolatile;
    streammap_maps_item_hostnames_t hostnames;
    unsigned int is_keyFrom_set:1;
    unsigned int is_keyTo_set:1;
    unsigned int is_values_set:1;
    unsigned int is_isVolatile_set:1;
    unsigned int is_hostnames_set:1;
} streammap_maps_item_t;

typedef njt_array_t  streammap_maps_t;
typedef struct streammap_t_s {
    streammap_maps_t *maps;
    unsigned int is_maps_set:1;
} streammap_t;

streammap_maps_item_values_item_valueFrom_t* get_streammap_maps_item_values_item_valueFrom(streammap_maps_item_values_item_t *out);
streammap_maps_item_values_item_valueTo_t* get_streammap_maps_item_values_item_valueTo(streammap_maps_item_values_item_t *out);
streammap_maps_item_values_item_t* get_streammap_maps_item_values_item(streammap_maps_item_values_t *out, size_t idx);
streammap_maps_item_keyFrom_t* get_streammap_maps_item_keyFrom(streammap_maps_item_t *out);
streammap_maps_item_keyTo_t* get_streammap_maps_item_keyTo(streammap_maps_item_t *out);
// CHECK ARRAY not exceeding bounds before calling this func
streammap_maps_item_values_t* get_streammap_maps_item_values(streammap_maps_item_t *out);
streammap_maps_item_isVolatile_t get_streammap_maps_item_isVolatile(streammap_maps_item_t *out);
streammap_maps_item_hostnames_t get_streammap_maps_item_hostnames(streammap_maps_item_t *out);
streammap_maps_item_t* get_streammap_maps_item(streammap_maps_t *out, size_t idx);
// CHECK ARRAY not exceeding bounds before calling this func
streammap_maps_t* get_streammap_maps(streammap_t *out);
void set_streammap_maps_item_keyFrom(streammap_maps_item_t* obj, streammap_maps_item_keyFrom_t* field);
void set_streammap_maps_item_keyTo(streammap_maps_item_t* obj, streammap_maps_item_keyTo_t* field);
void set_streammap_maps_item_values_item_valueFrom(streammap_maps_item_values_item_t* obj, streammap_maps_item_values_item_valueFrom_t* field);
void set_streammap_maps_item_values_item_valueTo(streammap_maps_item_values_item_t* obj, streammap_maps_item_values_item_valueTo_t* field);
streammap_maps_item_values_item_t* create_streammap_maps_item_values_item(njt_pool_t *pool);
int add_item_streammap_maps_item_values(streammap_maps_item_values_t *src, streammap_maps_item_values_item_t* items);
streammap_maps_item_values_t* create_streammap_maps_item_values(njt_pool_t *pool, size_t nelts);
void set_streammap_maps_item_values(streammap_maps_item_t* obj, streammap_maps_item_values_t* field);
void set_streammap_maps_item_isVolatile(streammap_maps_item_t* obj, streammap_maps_item_isVolatile_t field);
void set_streammap_maps_item_hostnames(streammap_maps_item_t* obj, streammap_maps_item_hostnames_t field);
streammap_maps_item_t* create_streammap_maps_item(njt_pool_t *pool);
int add_item_streammap_maps(streammap_maps_t *src, streammap_maps_item_t* items);
streammap_maps_t* create_streammap_maps(njt_pool_t *pool, size_t nelts);
void set_streammap_maps(streammap_t* obj, streammap_maps_t* field);
streammap_t* create_streammap(njt_pool_t *pool);
streammap_t* json_parse_streammap(njt_pool_t *pool, const njt_str_t *json_string, js2c_parse_error_t *err_ret);
njt_str_t* to_json_streammap(njt_pool_t *pool, streammap_t *out, njt_int_t flags);
#endif /* PARSER_STREAMMAP_H */
